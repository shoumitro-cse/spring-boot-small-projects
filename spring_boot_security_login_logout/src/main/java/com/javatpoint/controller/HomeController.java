package com.javatpoint.controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

@Controller
public class HomeController {

        // Which is auto-generated by Spring, we will use it to handle the data
    @Autowired // This means to get the bean called userRepository
    private UserRepository userRepository;
    
    @RequestMapping(value = "/", method = RequestMethod.GET)
    public String index() {
        return "index";
    }
    

    @RequestMapping(value = "/logout", method = RequestMethod.GET)
    public String logoutPage(HttpServletRequest request, HttpServletResponse response) {
        Authentication auth = SecurityContextHolder.getContext().getAuthentication();
        if (auth != null) {
            new SecurityContextLogoutHandler().logout(request, response, auth);
        }
        return "redirect:/";
    }

    
    @RequestMapping(value = "/form", method = RequestMethod.GET)
    public String form() {
        return "form";
    }
//    curl localhost:8080/save -d name="Rohim hossain" -d email=rohim@gmail.com

//    @RequestMapping(value = "/save", method = RequestMethod.POST)
    @PostMapping(path = "/add") // Map ONLY POST Requests
    public  @ResponseBody String save(@RequestParam String name, @RequestParam String email) {

        User user = new User();
        user.setName(name);
        user.setEmail(email);
        userRepository.save(user);
        
//        ModelAndView modelAndView = new ModelAndView();
//        modelAndView.setViewName("user-data");
//        modelAndView.addObject("user", user);
        
        return "user_data";
    }

}
